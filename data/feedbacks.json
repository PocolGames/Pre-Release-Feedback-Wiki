{
    "feedbacks": [
        {
            "id": "feedback1",
            "memberId": "kwakminsung",
            "title": "Code Feedback Session 2",
            "date": "2025-04-09",
            "content": [
                "Git 폴더 구조가 비효율적이거나 정리되지 않은 것으로 보인다. 개선이 필요하다.",
                "동일한 스크립트 이름이 존재할 경우 컴파일 시 오류가 발생할 수 있다.",
                "스크립트 파일명은 고유해야 한다."
            ]
        },
        {
            "id": "feedback2",
            "memberId": "shinsunghyun",
            "title": "Code Feedback Session 2",
            "date": "2025-04-09",
            "content": [
                "<code>Manager</code> 스크립트의 개수가 너무 많다.",
                "2주 프로젝트라는 특성을 고려했을 때, 짧은 기간 내에 개발해야 하므로 <code>GameManager</code> 스크립트에 통합하여 관리하는 것도 좋은 방법이었을 것이다.",
                "지나치게 미래 지향적인 코딩을 한 것이 아닌가 생각된다.",
                "현재 <code>Manager</code> 스크립트들이 모두 싱글톤 패턴을 사용하며, 파괴되지 않는 오브젝트로 설정된 것인지 궁금하다.",
                "<code>Text</code> 컴포넌트는 현재 사용되지 않는 레거시 코드다. 유니티에서는 과거 버전과의 호환성을 위해 남겨둔 기능이므로, 사용을 권장하지 않는다.",
                "현재는 <cdoe>TextMeshPro</cdoe>를 사용하는 것이 유니티 공식 문서에서도 권장된다.",
                "대화 기능 구현 방식에서 <code>Text Asset</code>을 이용하여 <code>Split()</code> 함수를 사용했는데, 이는 레거시 방식이다.",
                "<code>Text Asset</code>을 이용한 <code>Split()</code> 방식은 다국어화를 진행할 경우 매우 복잡해지고 문제가 발생할 가능성이 크다.",
                "대화 기능의 경우 다국어 지원이 필요하기 때문에, Unity의 <code>Localization Package Manager</code>를 사용하는 것이 더 적절하다.",
                "<code>GameObject.Find(\"QuestManager\").GetComponent<QuestManager>().ReadQuestFile();</code>에서 <code> Find()</code> 함수는 성능이 매우 좋지 않다."

            ]
        },
        {
            "id": "feedback3",
            "memberId": "limeunsub",
            "title": "Code Feedback Session 2",
            "date": "2025-04-09",
            "content": [
                "현재 개발 방식은 해상도를 직접 코딩하여 적용하는 방식으로 보인다.",
                "이러한 경우, 특정 해상도가 플레이어의 컴퓨터에서 지원되지 않을 때 문제가 발생할 수 있다.",
                "현재 사용 중인 기기가 지원하는 해상도를 검색할 수 있는 코드가 존재하며, 이를 활용하여 개발하는 것을 추천한다.",
                "일반적으로 해상도 선택 UI는 드롭다운 패널을 사용하여 설정하는 방식을 많이 채택하므로, 이 기능을 구현해보는 것도 좋다."
            ]
        },
        {
            "id": "feedback4",
            "memberId": "johyunsung",
            "title": "Code Feedback Session 2",
            "date": "2025-04-09",
            "content": [
                "다양한 Unity 내부 함수를 활용하여 게임을 잘 구현했다.",
                "다른 부원들과는 다른 접근 방식으로 개발을 진행했다.",
                "카메라 움직임 또한 잘 구현되었다."
            ]
        },
        {
            "id": "feedback5",
            "memberId": "moonchoa",
            "title": "Art Feedback Session 1",
            "date": "2025-03-26",
            "content": [
                "2주차에 비해 1주차의 작업량이 적어 아쉬움이 남는다.",
                "작업물을 보낼 때, 캔버스를 합쳐서 보내는 것을 추천한다.",
                "여백이 많으면 파일 용량이 커져 문제가 될 수도 있다.",
                "인게임 스크린샷 컨셉 디자인은 완벽하다.",
                "캐릭터 애니메이션 연습도 해보는 것을 추천한다."
            ]
        },
        {
            "id": "feedback6",
            "memberId": "moonchoa",
            "title": "Art Feedback Session 2",
            "date": "2025-04-09",
            "content": [
                "캐릭터 애니메이션을 연습해보지 않은 점이 아쉽다.",
                "캔버스 분리를 잘했다.",
                "플랫한 대화창 UI의 경우, Unity에서는 해상도나 사용되는 공간에 따라 크기를 조절할 수 있는 시스템이 존재하므로,  동일한 패턴을 가진 UI는 하나만 제작해도 무방하다.",
                "대화창 UI는 체력바 UI와 마찬가지로 배경 이미지와 테두리를 분리하여 제작하는 경우가 있다. 이때 패널의 투명도는 Unity 내에서 조절할 수 있다."
            ]
        },
        {
            "id": "feedback7",
            "memberId": "parkchulmin",
            "title": "Art Feedback Session 1",
            "date": "2025-03-26",
            "content": [
                "픽셀 작업이므로 정확한 작업 시간 측정이 어렵다.",
                "게임 제작 경험이 있어 완성도가 상대적으로 높다.",
                "다음 프로젝트에서는 UI도 함께 제작해보는 것을 추천한다."
            ]
        },
        {
            "id": "feedback8",
            "memberId": "parkchulmin",
            "title": "Art Feedback Session 2",
            "date": "2025-04-09",
            "content": [
                "타일맵 제작의 완성도는 높은 편이지만, 타일 간 연결 부분에서 다소 어색한 부분이 보인다."
            ]
        },
        {
            "id": "feedback9",
            "memberId": "leejonghyun",
            "title": "Art Feedback Session 1",
            "date": "2025-03-26",
            "content": [
                "이미지 분리를 할 때 레이어만 나눠서 보내 아쉬움이 있었다.",
                "여백이 많으면 파일 용량이 커져 문제가 될 수도 있다.",
                "인벤토리, 아이콘, 대화창 등도 추가적으로 이미지 분리를 해야 한다.",
                "다음 프로젝트에서는 이미지 분리에 더욱 신경 쓰고, 캐릭터 애니메이션을 제작해 보는 것을 추천한다."
            ]
        },
        {
            "id": "feedback10",
            "memberId": "leejonghyun",
            "title": "Art Feedback Session 2",
            "date": "2025-04-09",
            "content": [
                "캐릭터의 무기가 변경되는 시스템이 있을 경우, 무기와 캐릭터를 분리하여 그려야 한다.",
                "캔버스의 크기가 너무 커서 조정할 필요가 있다.",
                "바닥 타일의 경우, 좌우 끝맺음이 다소 아쉽다. 1픽셀에 투명도가 적용되어 있어 양옆을 살짝 잘라서 인게임에 적용해야 한다. 다행히 자연스럽게 적용되었지만, 디자이너가 의도한 그림과 다르게 보일 수 있으므로 주의해야 한다.",
                "체력바 UI는 세 부분으로 나뉘며, 배경, 테두리, 체력바로 구성된다. 체력바의 배경을 추가로 그려야 한다. 이렇게 나누는 이유는 테두리를 활용하여 체력바 외곽선의 부자연스러움을 감추기 위함이다."
            ]
        },
        {
            "id": "feedback11",
            "memberId": "leehyunwoo",
            "title": "Art Feedback Session 1",
            "date": "2025-03-26",
            "content": [
                "캔버스 분리가 필요하다."
            ]
        },
        {
            "id": "feedback12",
            "memberId": "leehyunwoo",
            "title": "Art Feedback Session 2",
            "date": "2025-04-09",
            "content": [
                "캔버스를 과도하게 분리했다. 비슷한 유형의 요소들은 하나의 캔버스로 합치는 것이 중요하다.",
                "타일 캔버스의 경우, 이미지에 비해 여백이 너무 많다."
            ]
        },
        {
            "id": "feedback13",
            "memberId": "jungdaun",
            "title": "Art Feedback Session 1",
            "date": "2025-03-26",
            "content": [
                "게임 리소스 파일로 적용하기 위해 더 많은 이미지 분리가 필요해 보인다.",
                "다음 프로젝트에서는 캐릭터 애니메이션을 제작해 보는 것을 추천한다.",
                "이 프로젝트는 게임 리소스 파일을 제작하는 연습이 목적이다. 그림 실력을 평가하는 것이 아니므로 과도한 작업은 지양하기 바란다."
            ]
        },
        {
            "id": "feedback14",
            "memberId": "jungdaun",
            "title": "Art Feedback Session 2",
            "date": "2025-04-09",
            "content": [
                "캐릭터 애니메이션 아틀라스의 경우, <code>776 × 128</code> 픽셀 크기에 총 6프레임이지만, 776 픽셀은 6개로 나누어떨어지지 않는다. 이로 인해 캐릭터의 중심점이 맞지 않아 디자이너가 의도한 구도가 나오지 않을 가능성이 있다.",
                "반복되는 UI 이미지는 좌우 반전 역시 Unity 내에서 해결할 수 있으므로, 추가적으로 캔버스에 포함할 필요가 없다.",
                "바닥 타일 이미지를 보면, 땅과 잡초를 분리한 이미지와 합쳐놓은 이미지를 같은 캔버스에 구성한 것을 볼 수 있다. 합쳐놓은 이미지에서는 잡초 이미지 좌우에 빈 공간이 있었는데, 이는 디자이너가 의도한 요소로 보인다. 하지만 땅과 잡초를 분리하여 캔버스를 구성했을 경우, 이 빈 공간에 대한 정보를 Unity 개발자에게 따로 전달하지 않으면 게임에서 그대로 적용하기 어려울 수 있으며, 이는 추가적인 의사소통이 필요하다. 따라서 이러한 경우에는 개별적인 캔버스로 구성하는 것도 괜찮다."
            ]
        },
        {
            "id": "feedback15",
            "memberId": "moonchoa",
            "title": "Art Feedback Session 3",
            "date": "2025-05-07",
            "content": [
                "1주차",
                "작업량을 늘릴 필요가 있다.",
                "애니메이션 초안을 그려볼 때, 인게임에서 적용하여 확인하는 과정이 필요하기 때문에 따로 분리해서 작업하는 것이 좋다.",
                "2주차",
                "애니메이션 구성에 다소 어색한 부분이 보이는데, 이것이 쯔꾸르 장르의 개성을 살리기 위한 방식인지 궁금하다.",
                "현재 제작된 맵 디자인 역시 타일맵으로 충분히 구현할 수 있으므로, 타일맵 디자인 연습을 권한다.",
                "카펫 오브젝트도 반복되는 패턴을 고려해 제작하면, 다양한 상황에서 재사용 가능한 요소가 될 수 있다.",
                "창문에 비치는 빛 효과의 경우, 직접 그림을 그려서 구현한 것을 볼 수 있다. 하지만 유니티의 빛 효과를 활용하면 더욱 시각적인 연출이 가능하다. 다만, 이 경우 창문의 구성 요소를 여러 개로 나누어 그려야 하는 경우도 있을 수 있다."
                

            ]
        },
        {
            "id": "feedback16",
            "memberId": "leehyunwoo",
            "title": "Art Feedback Session 3",
            "date": "2025-05-07",
            "content": [
                "작업량을 늘릴 필요가 있다.",
                "계속 도트 작업물을 제출하는데, 지금은 게임 리소스 파일을 제작하는 연습을 하는 과정이기 때문에 도트 작업물은 지양하는 것이 좋다.",
                "작업 퀄리티를 올릴 이유가 없다.",
                "지금 어떤 영역의 작업을 선호하는지 알 수가 없다. 작업 퀄리티를 올리고 싶다면, 원하는 영역만 작업량을 늘려보는 것을 추천한다."
            ]
        },
        {
            "id": "feedback17",
            "memberId": "leejonghyun",
            "title": "Art Feedback Session 3",
            "date": "2025-05-07",
            "content": [
                "1주차",
                "버튼 UI의 경우 중첩되는 부분이 상당히 존재하기 때문에, 버튼 디자인은 하나만 하고 아이콘만 따로 분리해서 작업하는 것을 추천한다",
                "하지만, 같이 그려야 하는 경우도 존재할 수 있으니 나눠서 작업하는 경우도 있다는 것을 알아두면 좋다.",
                "타일맵은 보통 정사각형 사이즈로 이루어진 그림을 사용하기 때문에, 타일맵을 제작할 때는 네모로 이루어진 그림을 사용하는 것이 좋다.",
                "타일맵은 모든 방향에서 대응될 수 있는 그림을 그려야 한다. 특히, 코너 부분을 어떻게 처리하는 지에 따라서 그려야하는 타일맵의 갯수가 달라지기 떄문에 여러가지 방식으로 연습해보는 것을 추천한다.",
                "오브젝트 디자인도 여러가지 방식으로 연습해보는 것을 추천한다.",
                "이전에 체력바 UI를 그리는 것을 완성하지 않았다. 이번에 연습해보는 것을 추천한다.",
                "2주차",
                "UI에서 버튼이 눌렸을 때 바뀌는 이미지를 따로 제작하는 것이 좋았다.",
                "일부 애니메이션의 경우 프레임이 부족해 보이므로, GIF를 만들어 보는 것을 추천한다.",
                "체력바의 경우, 무늬가 없는 플랫한 UI라면 정사각형으로 작게 제작해도 무방하다. 유니티에서 반복 패턴으로 늘릴 수 있다.",
                "다음에는 복잡한 무늬를 가진 타일맵 디자인을 연습해 보는 것을 추천한다."

            ]
        },
        {
            "id": "feedback18",
            "memberId": "parkchulmin",
            "title": "Art Feedback Session 3",
            "date": "2025-05-07",
            "content": [
                "작업 퀄리티를 낮추고 다양한 오브젝트를 그려보는 것을 추천한다.",
                "캐릭터 애니메이션도 연습해 보는 것을 추천한다."
            ]
        },
        {
            "id": "feedback19",
            "memberId": "kangwoosung",
            "title": "Code Feedback Session 3",
            "date": "2025-05-07",
            "content": [
                "<code>NullReferenceException</code>오류가 발생하고 있습니다. 해당 오류는 객체가 null인 상태에서 접근하려고 할 때 발생합니다. 이 오류를 해결하기 위해서는 해당 객체가 null인지 확인하고, null이 아닐 경우에만 접근하도록 코드를 수정해야 합니다.",
                "UI에서 <code>Text Component</code>는 현재는 절대 사용하지 않는 레거시 코드입니다. <code>TextMeshPro</code>를 사용하는 것이 좋습니다."
            ]
        },
        {
            "id": "feedback20",
            "memberId": "shinsunghyun",
            "title": "Code Feedback Session 3",
            "date": "2025-05-07",
            "content": [
                "맵에 오브젝트를 미리 배치해둔 것을 볼 수가 있는데, 지금은 시간이 없어서 이런 방식을 채택했을 수도 있습니다.",
                "최적화 방식에서 코드로 오브젝트를 배치하는 경우도 존재하기 때문에 고려해봤으면 좋겠습니다.",
                "메서드 캡슐화는 잘 되어있습니다.",
                "<code>GameManager</code> 스크립트에서 <code>Locate Materixes</code>변수에 <code>Transform</code>을 하나하나 캐싱한 것으로 보이는 데, 이러한 경우는 코드로 캐싱을 하는 편이 유지보수에 더 유리할 수 있습니다.",
                "<code>string</code> 변수에 한글을 넣어서 <code>if</code>문을 사용한 것으로 보이는데, 이러한 경우는 <code>swtich</code>을 사용하거나 <code>enum</code>을 사용하는 것이 좋습니다.",
                "<code>string</code>변수에 한글을 넣어서 사용하는 것은 추천하지 않습니다. 영어를 사용하는 것을 권장드립니다."
            ]
        },
        {
            "id": "feedback21",
            "memberId": "jeonbyeonggeun",
            "title": "Code Feedback Session 3",
            "date": "2025-05-07",
            "content": [
                "코드를 update나 fixedupdate에 모두 넣지 않는 것을 권장함. 캡슐화를 연습해보는 것을 추천."
            ]
        },
        {
            "id": "feedback22",
            "memberId": "parkharam",
            "title": "Code Feedback Session 1",
            "date": "2025-03-26",
            "content": [
                "게임 리소스 파일을 제작해야 하는 과정에서 기획에 집중하는 모습을 보였다."
            ]
        },
        {
            "id": "feedback23",
            "memberId": "parkharam",
            "title": "Code Feedback Session 2",
            "date": "2025-04-09",
            "content": [
                "캔버스 아틀라스 작업에서는 각각의 이미지가 네모난 영역으로 분리되어야 하지만, 일부가 서로의 영역을 침범하고 있다.",
                "게임 리소스 파일 제작법을 연습보는 과정이기 때문에 여러가지 영역을 작업해보면서 익숙해지는 과정이 필요하다. 하지만, 너무 애니메이션에만 몰두하는 모습을 보여줬다."
            ]
        },
        {
            "id": "feedback24",
            "memberId": "limeunsub",
            "title": "Code Feedback Session 3",
            "date": "2025-05-07",
            "content": [
                "<code>TextMeshPro</code>를 설치할 때, 폰트 에셋을 지정해서 설치하는 것이 좋다. 사용하지 않는 폰트가 많이 생성된다.",
                "사용하지 않는 헤더 정리<code>using NUnit.Framework</code>는 사용하지 않는 것으로 보인다.</code>",
                "<code>Manager</code> 스크립트들을 관리하는 방법을 고민해보는 것이 좋다. 어디서든 참조할 수 있도록 설정하는 연습을 해보는 것이 좋다.",
                "Camera 추적 기능을 직접 구현한 것으로 보이는데, 유니티 시네머신을 이용하면 더 간단하게 카메라 움직임을 구현할 수 있다."
            ]
        },
        {
            "id": "feedback25",
            "memberId": "kwakminsung",
            "title": "Code Feedback Session 3",
            "date": "2025-05-07",
            "content": [
                "커밋 메시지를 더 상세하게 적을 것.",
                "5월 7일에 생성된 <code>New Unity Project</code> 폴더 직접 생성한 것인지 궁금하다.",
                "지금 프로젝트 파일에 <code>ProjectSettings</code> 폴더가 두 개가 존재함."
            ]
        },
        {
            "id": "feedback26",
            "memberId": "johyunsung",
            "title": "Code Feedback Session 3",
            "date": "2025-05-07",
            "content":[
                "커밋 메시지를 더 상세하게 적을 것."
            ]
        },
        {
            "id": "feedback27",
            "memberId": "kangwoosung",
            "title": "Code Feedback Session 3",
            "date": "2025-05-15",
            "content":[
                "<code>if (UnityEngine.EventSystems.EventSystem.current.IsPointerOverGameObject() == false)</code>이러한 코드의 경우 using 선언문을 사용하는 것을 추천.",
                "<code>GameObject.Find(\"Background\").transform.position</code>에서 <code>Find( )</code>는 최적화 문제로 사용하지 말 것.",
                "유니티 singleton 패턴을 알아보고 이렇게 생성된 컴포넌트에 접근하는 방법을 공부할 것."
            ]
        },
        {
            "id": "feedback28",
            "memberId": "parkseongbin",
            "title": "Code Feedback Session 3",
            "date": "2025-05-15",
            "content":[
                "git 폴더에 유니티 프로젝트 여러개 생성하지 말 것.",
                "branch를 잘 사용해서 효율적인 폴더 환경을 만들 것."
            ]
        },
        {
            "id": "feedback29",
            "memberId": "chawoosoek",
            "title": "Code Feedback Session 3",
            "date": "2025-05-15",
            "content":[
                "<code>Text</code> 컴포넌트 금지"
            ]
        }
    ]
}
